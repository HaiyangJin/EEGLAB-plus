function outputFig = erp_erpimage(trialTable, channel, erpwindow, event, acc, subj, imageTitle)
% trialTable(table): Generated by eeg_trialdata. First several columns are
%                    the information (independent variable) abou the trials
%                    and the rest columns are the trial data. Each row is 
%                    for one participant, one chanel, and one condition (bin).
% channel(numeric): The channels are used to plot the data
% erpwindow(num): Define the time window you want to plot. it should
%                 includes two integers (points), which are the start and
%                 the end of the window. (The default is the whole window).
% event(cell): The event(s) are used to plot the data. (The default is all
%              the events.
% acc(num): Do you want to plot the correct or incorrect trials if you 
%           include the accuracy data? (The default is plot both).
% subj(cell): The sujbect codes that you want to plot. (The default is all).

%% Defalut values
if nargin < 2
    error('Not enough inputs for eeg_erpimage!');
elseif nargin < 3
    erpwindow = [];
    event = [];
    acc = [];
    subj = [];
    imageTitle = 'ERP-image';
elseif nargin < 4
    event = [];
    acc = [];
    subj = [];
    imageTitle = 'ERP-image';
elseif nargin < 5
    acc = [];   
    subj = [];
    imageTitle = 'ERP-image';
elseif nargin < 6
    subj = [];
    imageTitle = 'ERP-image';
elseif imageTitle < 7
    imageTitle = 'ERP-image';
end

% convert the channel to cell
chanName = arrayfun(@(a) ['E', num2str(a)], channel, 'UniformOutput', false);

%% Select the data to be displayed
% which of the conditions will be shown?
isChan = ismember(trialTable.Channel, chanName);
nX = size(trialTable, 1);
if isempty(event), isEvent = ones(nX, 1); else isEvent = ismember(trialTable.Event, event); end
if isempty(acc), isAcc = ones(nX, 1); else isAcc = ismember(trialTable.ACC, acc); end
if isempty(subj), isSubj = ones(nX, 1); else isSubj = ismember(trialTable.Subjcode, subj); end
isX = logical(isChan .* isEvent .* isAcc .* isSubj);

% time window for display
isDataColu = cellfun(@(c) ~isnan(str2double(c(end))), trialTable.Properties.VariableNames);
dataTable = trialTable(:, isDataColu);
pointNames = dataTable.Properties.VariableNames;
nPoint = length(pointNames);
orderP0 = find(ismember(pointNames, 'P0'));
lagFrame = str2double(pointNames{1, orderP0 + 1}(end));

isYData = zeros(1, nPoint);
if isempty(erpwindow)
    isWindow = [1, nPoint];
    erpwindow = [-str2double(pointNames{1}(2:end)), str2double(pointNames{nPoint}(2:end))];
else
    isWindow = zeros(1, 2);
    for iW = 1:2
        thisPoint = erpwindow(iW);
        if thisPoint < 0
            tempPoint = ['N', num2str(abs(thisPoint))];
        elseif thisPoint >= 0
            tempPoint = ['P', num2str(abs(thisPoint))];
        end
        isWindow(iW) = find(ismember(pointNames, tempPoint));
    end
end
isYData(isWindow(1):isWindow(2)) = 1;


%% Data for the erp image
data = dataTable{logical(isX), logical(isYData)};
sortVar = trialTable{isX, 'RT'}';
xAxis = erpwindow(1):lagFrame:erpwindow(2);

smooth = 10;
downsampling = 1;
colorLimit = [-6 6];

outputFig = figure; 
erpimage(data', sortVar, xAxis, imageTitle,smooth,downsampling, 'cbar','on','caxis',colorLimit);




end

